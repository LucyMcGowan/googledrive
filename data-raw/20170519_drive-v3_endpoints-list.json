{
  "files.copy": {
    "id": ["files.copy"],
    "httpMethod": ["POST"],
    "path": ["files/{fileId}/copy"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "ignoreDefaultVisibility": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders."]
      },
      "keepRevisionForever": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Drive."]
      },
      "ocrLanguage": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A language hint for OCR processing during image import (ISO 639-1 code)."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.photos.readonly"],
    "description": ["Creates a copy of a file and applies any requested updates with patch semantics."],
    "parameterOrder": ["fileId"],
    "request": ["File"],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.create": {
    "id": ["files.create"],
    "httpMethod": ["POST"],
    "path": ["files"],
    "parameters": {
      "ignoreDefaultVisibility": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders."]
      },
      "keepRevisionForever": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Drive."]
      },
      "ocrLanguage": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A language hint for OCR processing during image import (ISO 639-1 code)."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      },
      "useContentAsIndexableText": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to use the uploaded content as indexable text."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file"],
    "description": ["Creates a new file."],
    "parameterOrder": [null],
    "request": ["File"],
    "response": [null],
    "supportsMediaUpload": [true],
    "mediaUpload": {
      "accept": ["*/*"],
      "maxSize": ["5120GB"],
      "protocols": {
        "simple": {
          "multipart": [true],
          "path": ["/upload/drive/v3/files"]
        },
        "resumable": {
          "multipart": [true],
          "path": ["/resumable/upload/drive/v3/files"]
        }
      }
    },
    "supportsSubscription": [true],
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.delete": {
    "id": ["files.delete"],
    "httpMethod": ["DELETE"],
    "path": ["files/{fileId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file"],
    "description": ["Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a Team Drive the user must be an organizer on the parent. If the target is a folder, all descendants owned by the user are also deleted."],
    "parameterOrder": ["fileId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.emptyTrash": {
    "id": ["files.emptyTrash"],
    "httpMethod": ["DELETE"],
    "path": ["files/trash"],
    "parameters": {},
    "scopes": ["drive"],
    "description": ["Permanently deletes all of the user's trashed files."],
    "parameterOrder": [null],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.export": {
    "id": ["files.export"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}/export"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "mimeType": {
        "location": ["query"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The MIME type of the format requested for this export."]
      }
    },
    "scopes": ["drive, drive.file, drive.readonly"],
    "description": ["Exports a Google Doc to the requested MIME type and returns the exported content."],
    "parameterOrder": ["fileId, mimeType"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": [true],
    "useMediaDownloadService": {}
  },
  "files.generateIds": {
    "id": ["files.generateIds"],
    "httpMethod": ["GET"],
    "path": ["files/generateIds"],
    "parameters": {
      "count": {
        "location": ["query"],
        "required": {},
        "type": ["integer"],
        "format": ["int32"],
        "description": ["The number of IDs to return."]
      },
      "space": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file"],
    "description": ["Generates a set of file IDs which can be provided in create requests."],
    "parameterOrder": [null],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.get": {
    "id": ["files.get"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}"],
    "parameters": {
      "acknowledgeAbuse": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media."]
      },
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Gets a file's metadata or content by ID."],
    "parameterOrder": ["fileId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": [true],
    "supportsMediaDownload": [true],
    "useMediaDownloadService": [true]
  },
  "files.list": {
    "id": ["files.list"],
    "httpMethod": ["GET"],
    "path": ["files"],
    "parameters": {
      "corpora": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["Comma-separated list of bodies of items (files/documents) to which the query applies. Supported bodies are 'user', 'domain', 'teamDrive' and 'allTeamDrives'. 'allTeamDrives' must be combined with 'user'; all other values must be used in isolation. Prefer 'user' or 'teamDrive' to 'allTeamDrives' for efficiency."]
      },
      "corpus": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["The source of files to list. Deprecated: use 'corpora' instead."]
      },
      "includeTeamDriveItems": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether Team Drive items should be included in results."]
      },
      "orderBy": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A comma-separated list of sort keys. Valid keys are 'createdTime', 'folder', 'modifiedByMeTime', 'modifiedTime', 'name', 'quotaBytesUsed', 'recency', 'sharedWithMeTime', 'starred', and 'viewedByMeTime'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedTime desc,name. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored."]
      },
      "pageSize": {
        "location": ["query"],
        "required": {},
        "type": ["integer"],
        "format": ["int32"],
        "description": ["The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached."]
      },
      "pageToken": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response."]
      },
      "q": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A query for filtering the file results. See the \"Search for Files\" guide for supported syntax."]
      },
      "spaces": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A comma-separated list of spaces to query within the corpus. Supported values are 'drive', 'appDataFolder' and 'photos'."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      },
      "teamDriveId": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["ID of Team Drive to search."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Lists or searches files."],
    "parameterOrder": [null],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.update": {
    "id": ["files.update"],
    "httpMethod": ["PATCH"],
    "path": ["files/{fileId}"],
    "parameters": {
      "addParents": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A comma-separated list of parent IDs to add."]
      },
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "keepRevisionForever": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Drive."]
      },
      "ocrLanguage": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A language hint for OCR processing during image import (ISO 639-1 code)."]
      },
      "removeParents": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A comma-separated list of parent IDs to remove."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      },
      "useContentAsIndexableText": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to use the uploaded content as indexable text."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.scripts"],
    "description": ["Updates a file's metadata and/or content with patch semantics."],
    "parameterOrder": ["fileId"],
    "request": ["File"],
    "response": [null],
    "supportsMediaUpload": [true],
    "mediaUpload": {
      "accept": ["*/*"],
      "maxSize": ["5120GB"],
      "protocols": {
        "simple": {
          "multipart": [true],
          "path": ["/upload/drive/v3/files/{fileId}"]
        },
        "resumable": {
          "multipart": [true],
          "path": ["/resumable/upload/drive/v3/files/{fileId}"]
        }
      }
    },
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "files.watch": {
    "id": ["files.watch"],
    "httpMethod": ["POST"],
    "path": ["files/{fileId}/watch"],
    "parameters": {
      "acknowledgeAbuse": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media."]
      },
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Subscribes to changes to a file"],
    "parameterOrder": ["fileId"],
    "request": ["Channel"],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": [true],
    "supportsMediaDownload": [true],
    "useMediaDownloadService": [true]
  },
  "permissions.create": {
    "id": ["permissions.create"],
    "httpMethod": ["POST"],
    "path": ["files/{fileId}/permissions"],
    "parameters": {
      "emailMessage": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["A custom message to include in the notification email."]
      },
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file or Team Drive."]
      },
      "sendNotificationEmail": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to send a notification email when sharing to users or groups. This defaults to true for users and groups, and is not allowed for other requests. It must not be disabled for ownership transfers."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      },
      "transferOwnership": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect."]
      }
    },
    "scopes": ["drive, drive.file"],
    "description": ["Creates a permission for a file or Team Drive."],
    "parameterOrder": ["fileId"],
    "request": ["Permission"],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "permissions.delete": {
    "id": ["permissions.delete"],
    "httpMethod": ["DELETE"],
    "path": ["files/{fileId}/permissions/{permissionId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file or Team Drive."]
      },
      "permissionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the permission."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.file"],
    "description": ["Deletes a permission."],
    "parameterOrder": ["fileId, permissionId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "permissions.get": {
    "id": ["permissions.get"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}/permissions/{permissionId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "permissionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the permission."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Gets a permission by ID."],
    "parameterOrder": ["fileId, permissionId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "permissions.list": {
    "id": ["permissions.list"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}/permissions"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file or Team Drive."]
      },
      "pageSize": {
        "location": ["query"],
        "required": {},
        "type": ["integer"],
        "format": ["int32"],
        "description": ["The maximum number of permissions to return per page. When not set for files in a Team Drive, at most 100 results will be returned. When not set for files that are not in a Team Drive, the entire list will be returned."]
      },
      "pageToken": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      }
    },
    "scopes": ["drive, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Lists a file's or Team Drive's permissions."],
    "parameterOrder": ["fileId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "permissions.update": {
    "id": ["permissions.update"],
    "httpMethod": ["PATCH"],
    "path": ["files/{fileId}/permissions/{permissionId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file or Team Drive."]
      },
      "permissionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the permission."]
      },
      "removeExpiration": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to remove the expiration date."]
      },
      "supportsTeamDrives": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the requesting application supports Team Drives."]
      },
      "transferOwnership": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect."]
      }
    },
    "scopes": ["drive, drive.file"],
    "description": ["Updates a permission with patch semantics."],
    "parameterOrder": ["fileId, permissionId"],
    "request": ["Permission"],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "revisions.delete": {
    "id": ["revisions.delete"],
    "httpMethod": ["DELETE"],
    "path": ["files/{fileId}/revisions/{revisionId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "revisionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the revision."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file"],
    "description": ["Permanently deletes a revision. This method is only applicable to files with binary content in Drive."],
    "parameterOrder": ["fileId, revisionId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "revisions.get": {
    "id": ["revisions.get"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}/revisions/{revisionId}"],
    "parameters": {
      "acknowledgeAbuse": {
        "location": ["query"],
        "required": {},
        "type": ["boolean"],
        "format": {},
        "description": ["Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media."]
      },
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "revisionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the revision."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Gets a revision's metadata or content by ID."],
    "parameterOrder": ["fileId, revisionId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": [true],
    "useMediaDownloadService": [true]
  },
  "revisions.list": {
    "id": ["revisions.list"],
    "httpMethod": ["GET"],
    "path": ["files/{fileId}/revisions"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "pageSize": {
        "location": ["query"],
        "required": {},
        "type": ["integer"],
        "format": ["int32"],
        "description": ["The maximum number of revisions to return per page."]
      },
      "pageToken": {
        "location": ["query"],
        "required": {},
        "type": ["string"],
        "format": {},
        "description": ["The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly"],
    "description": ["Lists a file's revisions."],
    "parameterOrder": ["fileId"],
    "request": [null],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  },
  "revisions.update": {
    "id": ["revisions.update"],
    "httpMethod": ["PATCH"],
    "path": ["files/{fileId}/revisions/{revisionId}"],
    "parameters": {
      "fileId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the file."]
      },
      "revisionId": {
        "location": ["path"],
        "required": [true],
        "type": ["string"],
        "format": {},
        "description": ["The ID of the revision."]
      }
    },
    "scopes": ["drive, drive.appdata, drive.file"],
    "description": ["Updates a revision with patch semantics."],
    "parameterOrder": ["fileId, revisionId"],
    "request": ["Revision"],
    "response": [null],
    "supportsMediaUpload": {},
    "mediaUpload": {},
    "supportsSubscription": {},
    "supportsMediaDownload": {},
    "useMediaDownloadService": {}
  }
}
