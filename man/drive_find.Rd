% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drive_find.R
\name{drive_find}
\alias{drive_find}
\title{Find files on Google Drive}
\usage{
drive_find(pattern = NULL, type = NULL, n_max = Inf, team_drive = NULL,
  corpora = NULL, ..., verbose = TRUE)
}
\arguments{
\item{pattern}{Character. If provided, only the items whose names match this
regular expression are returned. This is implemented locally on the results
returned by the API.}

\item{type}{Character. If provided, only files of this type will be returned.
Can be anything that \code{\link[=drive_mime_type]{drive_mime_type()}} knows how to handle. This is
processed by googledrive and sent as a query parameter.}

\item{n_max}{Integer. An upper bound on the number of items to return. This
applies to the results requested from the API, which may be further
filtered locally, via the \code{pattern} argument.}

\item{team_drive}{Anything that identifies one specific Team Drive: its name,
its id or URL marked with \code{\link{as_id}()}, or a
\code{\link{dribble}}. Will be pre-processed with
\code{\link{as_teamdrive}()}.}

\item{corpora}{Character, specifying the search collection. Only relevant in
the Team Drives context.}

\item{...}{Other parameters to pass along in the request. The most likely
candidate is \code{q}. See the examples and the API's
\href{https://developers.google.com/drive/v3/web/search-parameters}{Search for Files guide}.}

\item{verbose}{Logical, indicating whether to print informative messages
(default \code{TRUE}).}
}
\value{
An object of class \code{\link{dribble}}, a tibble with one row per
  item.
}
\description{
This is the closest googledrive function to what you can do at
\url{https://drive.google.com}: by default, you just get a listing of your files.
You can also search in various ways, e.g., filter by file type or ownership
or even work with Team Drives, if you have access. This is a very powerful
function. Together with the more specific \code{\link[=drive_get]{drive_get()}}, this is the main way
to identify files to target for downstream work.
}
\section{File type}{


Use \code{type} to filter on file type. Under the hood, this filters on MIME type.
But the input is pre-processed with \code{\link[=drive_mime_type]{drive_mime_type()}}, so you can use a few
shortcuts and file extensions, in addition to full-blown MIME types.
}

\section{Search parameters}{


Do advanced search on file properties by providing search clauses to the
\code{q} parameter that is passed to the API via \code{...}. Multiple \code{q} clauses or
vector-valued \code{q} are combined via 'and'.
}

\section{Trash}{


By default, \code{drive_find()} does not include files in the trash: it adds \code{q = "trashed = false"} to the query. However, it will not do so if the user
specifies a \code{q} search clause for trash inclusion or exclusion. To see only
files in the trash, use \code{\link[=drive_view_trash]{drive_view_trash()}}, which is a shortcut for
\code{drive_find(q = "trashed = true")}. To see files regardless of trash status,
use \code{drive_find(q = "trashed = true or trashed = false")}.
}

\section{Team Drives}{


I will be back!
}

\examples{
\dontrun{
## list "My Drive" w/o regard for folder hierarchy
drive_find()

## search for files located directly in your root folder
drive_find(q = "'root' in parents")

## filter for folders, the easy way and the hard way
drive_find(type = "folder")
drive_find(q = "mimeType = 'application/vnd.google-apps.folder'")

## filter for Google Sheets, the easy way and the hard way
drive_find(type = "spreadsheet")
drive_find(q = "mimeType='application/vnd.google-apps.spreadsheet'")

## files whose names match a regex
drive_find(pattern = "jt")

## control page size or cap the number of files returned
drive_find(pageSize = 50)
drive_find(n_max = 58)
drive_find(pageSize = 5, n_max = 15)

## various ways to specify q search clauses
## multiple q's
drive_find(q = "name contains 'TEST'",
           q = "modifiedTime > '2017-07-21T12:00:00'")
## vector q
drive_find(q = c("starred = true", "visibility = 'anyoneWithLink'"))

## override the default to get files regardless of trash status
drive_find(q = "trashed = true or trashed = false")
}

}
\seealso{
Wraps the \code{files.list} endpoint:
\itemize{
\item \url{https://developers.google.com/drive/v3/reference/files/list}
}

Helpful resource for forming your own queries:
\itemize{
\item \url{https://developers.google.com/drive/v3/web/search-parameters}
}
}
